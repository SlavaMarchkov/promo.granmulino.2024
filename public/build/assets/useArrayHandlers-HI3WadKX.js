import{r as a}from"./app-CcRn7-yu.js";function h(){const s=a({column:"id",asc:!0,numeric:!0});return{sortBy:s,setSort:(o="id",e=!0)=>{s.numeric=e,s.column===o?s.asc===!0?s.asc=!1:s.asc=s.asc===!1:(s.column=o,s.asc=!1)},resetSearchKeys:o=>{for(const e in o)o[e]=e.startsWith("is")?!1:""},resetSortKeys:(o="id",e=!0,t=!0)=>{s.column=o,s.asc=e,s.numeric=t},filterArray:(o,e)=>{let t=o.slice();for(const r in e)r.startsWith("is")&&e[r]===!0?t=t.filter(n=>n[r]===!0):!r.startsWith("is")&&e[r]!==""&&(r.endsWith("Id")?t=t.filter(n=>e[r]==="null"?n[r]===JSON.parse(e[r]):n[r]===parseInt(e[r],10)):r==="type"?t=t.filter(n=>n[r]===e[r]):t=t.filter(n=>{if(n[r]!==null)return Number.isInteger(n[r])?n[r]<=parseInt(e[r],10):n[r].toLowerCase().includes(e[r].toLowerCase())}));return t},sortArray:o=>o.slice().sort((t,r)=>{if(s.numeric)return s.asc?t[s.column]-r[s.column]:r[s.column]-t[s.column];{const n=t[s.column]?t[s.column].toLowerCase():"",c=r[s.column]?r[s.column].toLowerCase():"";return s.asc?n.localeCompare(c):c.localeCompare(n)}}),sortArrayByStringColumn:(o,e)=>o.slice().sort((r,n)=>{const c=r[e].toLowerCase(),l=n[e].toLowerCase();return c<l?-1:c>l?1:0}),sortArrayByBoolean:(o,e)=>o.slice().sort((r,n)=>r[e]===n[e]?0:r[e]?-1:1),getUniqueObjectsFromArray:o=>o.slice().reduce((t,r)=>(t.findIndex(n=>n.id===r.id)===-1&&t.push(r),t),[]),getAverageOfArray:o=>{const e=o.length,t=o.reduce((r,n)=>r+(+n||0),0);return e?(t/e).toFixed(2):0}}}export{h as u};
